{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "topLevelManagementGroupPrefix": {
      "type": "String",
      "maxLength": 25,
      "metadata": {
        "description": "Provide a prefix (max 25 characters, unique at tenant-scope) for the Management Group hierarchy and other resources created as part of Enterprise-scale."
      }
    }
  },
  "variables": {
    "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]",
    "policies": {
      "policyDefinitions": [
        {
          "properties": {
            "description": "This policy enables you to restrict that Application Gateways is always deployed with WAF enabled",
            "displayName": "Application Gateway should be deployed with WAF enabled",
            "mode": "Indexed",
            "parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/applicationGateways"
                  },
                  {
                    "field": "Microsoft.Network/applicationGateways/sku.name",
                    "notequals": "WAF_v2"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "Deny-AppGW-Without-WAF"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/applicationGateways"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/applicationGateways/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "ApplicationGatewayAccessLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "ApplicationGatewayPerformanceLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "ApplicationGatewayFirewallLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-ApplicationGateway"
        },
        {
          "properties": {
            "displayName": "RDP access from the Internet should be blocked",
            "description": "This policy denies any network security rule that allows RDP access from Internet",
            "mode": "All",
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny"
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                  },
                  {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                        "equals": "Allow"
                      },
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                        "equals": "Inbound"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                            "equals": "*"
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                            "equals": "3389"
                          },
                          {
                            "value": "[[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'))), contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'),'-')), and(lessOrEquals(int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389),greaterOrEquals(int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389)), 'false')]",
                            "equals": "true"
                          },
                          {
                            "count": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                              "where": {
                                "value": "[[if(and(not(empty(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')))), contains(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')),'-')), and(lessOrEquals(int(first(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389),greaterOrEquals(int(last(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389)) , 'false')]",
                                "equals": "true"
                              }
                            },
                            "greater": 0
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                              "notEquals": "*"
                            }
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                              "notEquals": "3389"
                            }
                          }
                        ]
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                            "equals": "*"
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                            "equals": "Internet"
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                              "notEquals": "*"
                            }
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                              "notEquals": "Internet"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "Deny-RDP-From-Internet"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/expressRouteCircuits"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/expressRouteCircuits/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "PeeringRouteLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-ExpressRoute"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Firewall to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/azureFirewalls"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "AzureFirewallApplicationRule",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AzureFirewallNetworkRule",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AzureFirewallDnsProxy",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-Firewall"
        },
        {
          "properties": {
            "description": "Deploys Azure Firewall Manager policy in subscription where the policy is assigned.",
            "displayName": "Deploy Azure Firewall Manager policy in the subscription",
            "mode": "All",
            "parameters": {
              "fwpolicy": {
                "type": "Object",
                "metadata": {
                  "displayName": "fwpolicy",
                  "description": "Object describing Azure Firewall Policy"
                },
                "defaultValue": {}
              },
              "fwPolicyRegion": {
                "type": "String",
                "metadata": {
                  "displayName": "fwPolicyRegion",
                  "description": "Select Azure region for Azure Firewall Policy",
                  "strongType": "location"
                }
              },
              "rgName": {
                "type": "String",
                "metadata": {
                  "displayName": "rgName",
                  "description": "Provide name for resource group."
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/firewallPolicies",
                  "deploymentScope": "subscription",
                  "existenceScope": "resourceGroup",
                  "resourceGroupName": "[[parameters('rgName')]",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                  ],
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "Incremental",
                      "parameters": {
                        "rgName": {
                          "value": "[[parameters('rgName')]"
                        },
                        "fwPolicy": {
                          "value": "[[parameters('fwPolicy')]"
                        },
                        "fwPolicyRegion": {
                          "value": "[[parameters('fwPolicyRegion')]"
                        }
                      },
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "rgName": {
                            "type": "String"
                          },
                          "fwPolicy": {
                            "type": "object"
                          },
                          "fwPolicyRegion": {
                            "type": "String"
                          }
                        },
                        "resources": [
                          {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2018-05-01",
                            "name": "[[parameters('rgName')]",
                            "location": "[[deployment().location]",
                            "properties": {}
                          },
                          {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2018-05-01",
                            "name": "fwpolicies",
                            "resourceGroup": "[[parameters('rgName')]",
                            "dependsOn": [
                              "[[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                            ],
                            "properties": {
                              "mode": "Incremental",
                              "template": {
                                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                "contentVersion": "1.0.0.0",
                                "parameters": {},
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Network/firewallPolicies",
                                    "apiVersion": "2019-09-01",
                                    "name": "[[parameters('fwpolicy').firewallPolicyName]",
                                    "location": "[[parameters('fwpolicy').location]",
                                    "dependsOn": [],
                                    "tags": {},
                                    "properties": {},
                                    "resources": [
                                      {
                                        "type": "ruleGroups",
                                        "apiVersion": "2019-09-01",
                                        "name": "[[parameters('fwpolicy').ruleGroups.name]",
                                        "dependsOn": [
                                          "[[resourceId('Microsoft.Network/firewallPolicies',parameters('fwpolicy').firewallPolicyName)]"
                                        ],
                                        "properties": {
                                          "priority": "[[parameters('fwpolicy').ruleGroups.properties.priority]",
                                          "rules": "[[parameters('fwpolicy').ruleGroups.properties.rules]"
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "outputs": {}
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-FirewallPolicy"
        },
        {
          "properties": {
            "description": "This policy enables you to ensure when a Key Vault is created with out soft delete enabled it will be added.",
            "displayName": "KeyVault SoftDelete should be enabled",
            "mode": "Indexed",
            "parameters": {},
            "metadata": {
              "version": "1.0.0",
              "category": "Key Vault"
            },
            "policyRule": {
              "if": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.KeyVault/vaults"
                      },
                      {
                        "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                        "notEquals": true
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "append",
                "details": [
                  {
                    "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                    "value": true
                  }
                ]
              }
            }
          },
          "name": "Append-KV-SoftDelete"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/loadBalancers"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/loadBalancers/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "timeGrain": null,
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "LoadBalancerAlertEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "LoadBalancerProbeHealthStatus",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-LoadBalancer"
        },
        {
          "properties": {
            "description": "This policy denies creation of Public IPs under the assigned scope.",
            "displayName": "Deny the creation of public IP",
            "mode": "Indexed",
            "parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/publicIPAddresses"
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "Deny-PublicIP"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/networkInterfaces"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/networkInterfaces/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "timeGrain": null,
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-NIC"
        },
        {
          "properties": {
            "description": "Deploys NSG flow logs and traffic analytics to Log Analytics with a specfied retention period.",
            "displayName": "Deploys NSG flow logs and traffic analytics to Log Analytics",
            "mode": "Indexed",
            "parameters": {
              "retention": {
                "type": "Integer",
                "metadata": {
                  "displayName": "Retention"
                },
                "defaultValue": 5
              },
              "interval": {
                "type": "Integer",
                "metadata": {
                  "displayName": "Traffic Analytics processing interval mins (10/60)"
                },
                "defaultValue": 60
              },
              "workspace": {
                "type": "String",
                "metadata": {
                  "strongType": "omsWorkspace",
                  "displayName": "Resource ID of Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                },
                "defaultValue": ""
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.1.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/networkSecurityGroups"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/networkWatchers/flowlogs",
                  "name": "[[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                        "equals": "true"
                      }
                    ]
                  },
                  "existenceScope": "resourceGroup",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
                    "/providers/Microsoft.Authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12",
                    "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                    "/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab",
                    "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                  ],
                  "resourceGroupName": "[[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), 'NetworkWatcherRG', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]",
                  "deploymentScope": "subscription",
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "Incremental",
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "networkSecurityGroup": {
                          "value": "[[field('id')]"
                        },
                        "workspace": {
                          "value": "[[parameters('workspace')]"
                        },
                        "retention": {
                          "value": "[[parameters('retention')]"
                        },
                        "interval": {
                          "value": "[[parameters('interval')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "location": {
                            "type": "String"
                          },
                          "networkSecurityGroup": {
                            "type": "String"
                          },
                          "workspace": {
                            "type": "String"
                          },
                          "retention": {
                            "type": "int"
                          },
                          "interval": {
                            "type": "int"
                          },
                          "time": {
                            "type": "String",
                            "defaultValue": "[[utcNow()]"
                          }
                        },
                        "variables": {
                          "resourceGroupName": "[[split(parameters('networkSecurityGroup'), '/')[4]]",
                          "securityGroupName": "[[split(parameters('networkSecurityGroup'), '/')[8]]",
                          "storageAccountName": "[[concat('es', uniqueString(variables('securityGroupName'), parameters('time')))]"
                        },
                        "resources": [
                          {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2019-10-01",
                            "name": "[[concat(variables('resourceGroupName'), '.', variables('securityGroupName'))]",
                            "resourceGroup": "[[variables('resourceGroupName')]",
                            "properties": {
                              "mode": "Incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "resources": [
                                  {
                                    "type": "Microsoft.Storage/storageAccounts",
                                    "apiVersion": "2019-06-01",
                                    "name": "[[variables('storageAccountName')]",
                                    "location": "[[parameters('location')]",
                                    "properties": {},
                                    "kind": "StorageV2",
                                    "sku": {
                                      "name": "Standard_LRS",
                                      "tier": "Standard"
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2019-10-01",
                            "name": "[[concat('NetworkWatcherRG', '.', variables('securityGroupName'))]",
                            "resourceGroup": "NetworkWatcherRG",
                            "properties": {
                              "mode": "Incremental",
                              "template": {
                                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "resources": [
                                  {
                                    "type": "Microsoft.Network/networkWatchers",
                                    "apiVersion": "2020-05-01",
                                    "name": "[[concat('NetworkWatcher_', toLower(parameters('location')))]",
                                    "location": "[[parameters('location')]",
                                    "properties": {},
                                    "resources": [
                                      {
                                        "type": "flowLogs",
                                        "apiVersion": "2019-11-01",
                                        "name": "[[concat(variables('securityGroupName'), '-Network-flowlog')]",
                                        "location": "[[parameters('location')]",
                                        "properties": {
                                          "enabled": true,
                                          "format": {
                                            "type": "JSON",
                                            "version": 2
                                          },
                                          "retentionPolicy": {
                                            "days": "[[parameters('retention')]",
                                            "enabled": true
                                          },
                                          "flowAnalyticsConfiguration": {
                                            "networkWatcherFlowAnalyticsConfiguration": {
                                              "enabled": true,
                                              "trafficAnalyticsInterval": "[[parameters('interval')]",
                                              "workspaceResourceId": "[[parameters('workspace')]"
                                            }
                                          },
                                          "storageId": "[[concat(subscription().id, '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                                          "targetResourceId": "[[parameters('networkSecurityGroup')]"
                                        },
                                        "dependsOn": [
                                          "[[concat('NetworkWatcher_', toLower(parameters('location')))]"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "dependsOn": [
                              "[[concat(variables('resourceGroupName'), '.', variables('securityGroupName'))]"
                            ]
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Nsg-FlowLogs-to-LA"
        },
        {
          "properties": {
            "description": "This policy denies the creation of a subnet without a Network Security Group. NSG help to protect traffic across subnet-level.",
            "displayName": "Subnets should have a Network Security Group",
            "mode": "All",
            "parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "excludedSubnets": {
                "type": "Array",
                "metadata": {
                  "displayName": "Excluded Subnets",
                  "description": "Array of subnet names that are excluded from this policy"
                },
                "defaultValue": [
                  "GatewaySubnet",
                  "AzureFirewallSubnet",
                  "AzureFirewallManagementSubnet"
                ]
              }
            },
            "metadata": {
              "version": "2.0.0",
              "category": "Network"
            },
            "policyRule": {
              "if": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Network/virtualNetworks",
                        "field": "type"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                          "where": {
                            "allOf": [
                              {
                                "exists": "false",
                                "field": "Microsoft.Network/virtualNetworks/subnets[*].networkSecurityGroup.id"
                              },
                              {
                                "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                                "notIn": "[[parameters('excludedSubnets')]"
                              }
                            ]
                          }
                        },
                        "notEquals": 0
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/virtualNetworks/subnets"
                      },
                      {
                        "field": "name",
                        "notIn": "[[parameters('excludedSubnets')]"
                      },
                      {
                        "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id",
                        "exists": "false"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "Deny-Subnet-Without-Nsg"
        },
        {
          "properties": {
            "displayName": "Subnets should have a User Defined Route",
            "policyType": "Custom",
            "mode": "All",
            "description": "This policy denies the creation of a subnet without a User Defined Route (UDR).",
            "metadata": {
              "version": "2.0.0",
              "category": "Network"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny"
              },
              "excludedSubnets": {
                "type": "Array",
                "metadata": {
                  "displayName": "Excluded Subnets",
                  "description": "Array of subnet names that are excluded from this policy"
                },
                "defaultValue": [
                  "AzureBastionSubnet"
                ]
              }
            },
            "policyRule": {
              "if": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Network/virtualNetworks",
                        "field": "type"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                          "where": {
                            "allOf": [
                              {
                                "exists": "false",
                                "field": "Microsoft.Network/virtualNetworks/subnets[*].routeTable.id"
                              },
                              {
                                "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                                "notIn": "[[parameters('excludedSubnets')]"
                              }
                            ]
                          }
                        },
                        "notEquals": 0
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "Microsoft.Network/virtualNetworks/subnets"
                      },
                      {
                        "field": "name",
                        "notIn": "[[parameters('excludedSubnets')]"
                      },
                      {
                        "field": "Microsoft.Network/virtualNetworks/subnets/routeTable.id",
                        "exists": "false"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "Deny-Subnet-Without-Udr"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/networkSecurityGroups"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [],
                              "logs": [
                                {
                                  "category": "NetworkSecurityGroupEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "NetworkSecurityGroupRuleCounter",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-NetworkSecurityGroups"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/trafficManagerProfiles"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/trafficManagerProfiles/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "ProbeHealthStatusEvents",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-TrafficManager"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Compute/virtualMachines"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Compute/virtualMachines/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-VM"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/virtualNetworks"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/virtualNetworks/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "VMProtectionAlerts",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-VirtualNetwork"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Compute/virtualMachineScaleSets"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-VMSS"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled.",
            "displayName": "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/virtualNetworkGateways"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "metricsEnabled": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/virtualNetworkGateways/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "GatewayDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "IKEDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "P2SDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "RouteDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "RouteDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "TunnelDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-VNetGW"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for WVD Host Pools to stream to a Log Analytics workspace when any Host Pools which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all and categorys enabled.",
            "displayName": "Deploy Diagnostic Settings for WVD Host Pools to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DesktopVirtualization/hostpools"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DesktopVirtualization/hostpools/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "logs": [
                                {
                                  "category": "Checkpoint",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Error",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Management",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Connection",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "HostRegistration",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AgentHealthStatus",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-WVDHostPools"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for WVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all and categorys enabled.",
            "displayName": "Deploy Diagnostic Settings for WVD Workspace to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DesktopVirtualization/workspaces"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DesktopVirtualization/workspaces/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "logs": [
                                {
                                  "category": "Checkpoint",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Error",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Management",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Feed",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-WVDWorkspace"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for WVD Application group to stream to a Log Analytics workspace when any application group which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all and categorys enabled.",
            "displayName": "Deploy Diagnostic Settings for WVD Application group to Log Analytics workspace",
            "mode": "Indexed",
            "parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "String",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DesktopVirtualization/applicationGroups"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "diag-to-law-setbypolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "logAnalytics": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "profileName": {
                            "type": "String"
                          },
                          "logsEnabled": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DesktopVirtualization/applicationGroups/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "logs": [
                                {
                                  "category": "Checkpoint",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Error",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Management",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Diagnostics-WVDAppGroup"
        },
        {
          "properties": {
            "displayName": "AppService append enable https only setting to enforce https setting.",
            "mode": "All",
            "description": "Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Append",
                "allowedValues": [
                  "Append",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "notequals": true
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": [
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "value": true
                  }
                ]
              }
            }
          },
          "name": "Append-AppService-httpsonly"
        },
        {
          "properties": {
            "displayName": "AppService append sites with minimum TLS version to enforce.",
            "mode": "All",
            "description": "Append the AppService sites object to ensure that min Tls version is set to required minimum TLS version. Please note Append does not enforce compliance use then deny.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Append",
                "allowedValues": [
                  "Append",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "minTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.0",
                  "1.1"
                ],
                "metadata": {
                  "displayName": "Select version minimum TLS Web App config",
                  "description": "Select version  minimum TLS version for a  Web App config to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites/config"
                  },
                  {
                    "field": "Microsoft.Web/sites/config/minTlsVersion",
                    "notEquals": "[[parameters('minTlsVersion')]"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": [
                  {
                    "field": "Microsoft.Web/sites/config/minTlsVersion",
                    "value": "[[parameters('minTlsVersion')]"
                  }
                ]
              }
            }
          },
          "name": "Append-AppService-latestTLS"
        },
        {
          "properties": {
            "displayName": "API App should only be accessible over HTTPS",
            "mode": "Indexed",
            "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "field": "kind",
                    "like": "*api"
                  },
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "equals": "false"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "Deny-AppServiceApiApp-http"
        },
        {
          "properties": {
            "displayName": "Function App should only be accessible over HTTPS",
            "mode": "Indexed",
            "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "field": "kind",
                    "like": "functionapp*"
                  },
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "equals": "false"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "Deny-AppServiceFunctionApp-http"
        },
        {
          "properties": {
            "displayName": "Web Application should only be accessible over HTTPS",
            "mode": "Indexed",
            "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "field": "kind",
                    "like": "app*"
                  },
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "equals": "false"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "Deny-AppServiceWebApp-http"
        },
        {
          "properties": {
            "description": "Deploys NSG flow logs and traffic analytics to a storageaccountid with a specfied retention period.",
            "displayName": "Deploys NSG flow logs and traffic analytics",
            "mode": "Indexed",
            "parameters": {
              "retention": {
                "type": "Integer",
                "metadata": {
                  "displayName": "Retention"
                },
                "defaultValue": 5
              },
              "storageAccountResourceId": {
                "type": "String",
                "metadata": {
                  "displayName": "Storage Account Resource Id",
                  "strongType": "Microsoft.Storage/storageAccounts"
                }
              },
              "trafficAnalyticsInterval": {
                "type": "Integer",
                "metadata": {
                  "displayName": "Traffic Analytics processing interval mins (10/60)"
                },
                "defaultValue": 60
              },
              "flowAnalyticsEnabled": {
                "type": "Boolean",
                "metadata": {
                  "displayName": "Enable Traffic Analytics"
                },
                "defaultValue": false
              },
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "strongType": "omsWorkspace",
                  "displayName": "Resource ID of Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                },
                "defaultValue": ""
              },
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/networkSecurityGroups"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/networkWatchers/flowLogs",
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "resourceGroupName": "NetworkWatcherRG",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
                        "equals": "[[parameters('flowAnalyticsEnabled')]"
                      }
                    ]
                  },
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "parameters": {
                        "networkSecurityGroupName": {
                          "value": "[[field('name')]"
                        },
                        "resourceGroupName": {
                          "value": "[[resourceGroup().name]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "storageAccountResourceId": {
                          "value": "[[parameters('storageAccountResourceId')]"
                        },
                        "retention": {
                          "value": "[[parameters('retention')]"
                        },
                        "flowAnalyticsEnabled": {
                          "value": "[[parameters('flowAnalyticsEnabled')]"
                        },
                        "trafficAnalyticsInterval": {
                          "value": "[[parameters('trafficAnalyticsInterval')]"
                        },
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "networkSecurityGroupName": {
                            "type": "String"
                          },
                          "resourceGroupName": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          },
                          "storageAccountResourceId": {
                            "type": "String"
                          },
                          "retention": {
                            "type": "int"
                          },
                          "flowAnalyticsEnabled": {
                            "type": "bool"
                          },
                          "trafficAnalyticsInterval": {
                            "type": "int"
                          },
                          "logAnalytics": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/networkWatchers/flowLogs",
                            "apiVersion": "2020-05-01",
                            "name": "[[take(concat('NetworkWatcher_', toLower(parameters('location')),  '/', parameters('networkSecurityGroupName'), '-', parameters('resourceGroupName'), '-flowlog' ), 80)]",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "targetResourceId": "[[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
                              "storageId": "[[parameters('storageAccountResourceId')]",
                              "enabled": true,
                              "retentionPolicy": {
                                "enabled": true,
                                "days": "[[parameters('retention')]"
                              },
                              "format": {
                                "type": "JSON",
                                "version": 2
                              },
                              "flowAnalyticsConfiguration": {
                                "networkWatcherFlowAnalyticsConfiguration": {
                                  "enabled": "[[bool(parameters('flowAnalyticsEnabled'))]",
                                  "trafficAnalyticsInterval": "[[parameters('trafficAnalyticsInterval')]",
                                  "workspaceId": "[[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').properties.customerId, json('null')) ]",
                                  "workspaceRegion": "[[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').location, json('null')) ]",
                                  "workspaceResourceId": "[[if(not(empty(parameters('logAnalytics'))), parameters('logAnalytics'), json('null'))]"
                                }
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Nsg-FlowLogs"
        },
        {
          "properties": {
            "displayName": "Azure Storage deploy a specific min TLS version requirement and enforce SSL/HTTPS ",
            "mode": "Indexed",
            "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure STorage. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.0",
              "category": "Storage"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect Azure STorage",
                  "description": "Enable or disable the execution of the policy minimum TLS version Azure STorage"
                }
              },
              "minimumTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_1",
                  "TLS1_0"
                ],
                "metadata": {
                  "displayName": "Select version for PostgreSQL server",
                  "description": "Select version minimum TLS version Azure STorage to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Storage/storageAccounts"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                        "notEquals": "true"
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                        "notEquals": "[[parameters('minimumTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.DBforPostgreSQL/servers",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                        "equals": "[[parameters('minimumTlsVersion')]"
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                        "equals": "false"
                      }
                    ]
                  },
                  "name": "current",
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "minimumTlsVersion": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2019-06-01",
                            "name": "[[concat(parameters('resourceName'))]",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "supportsHttpsTrafficOnly": true,
                              "minimumTlsVersion": "[[parameters('minimumTlsVersion')]"
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "minimumTlsVersion": {
                          "value": "[[parameters('minimumTlsVersion')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "Deploy-Storage-sslEnforcement"
        }
      ]
    },
    "initiatives": {
      "policySetDefinitions": [
        {
          "properties": {
            "description": "This policy set deploys the configurations of application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace. See the list of policies of the services that are included ",
            "displayName": "Deploy Diagnostic Settings to Log Analytics Workspace",
            "parameters": {
              "logAnalytics": {
                "metadata": {
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "displayName": "Log Analytics workspace",
                  "strongType": "omsWorkspace"
                },
                "type": "String"
              },
              "profileName": {
                "type": "String",
                "defaultValue": "diag-to-law-setbypolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "ApplicationGatewayLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "ExpressRouteLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "FirewallLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Firewall to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "KeyVaultLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Key Vault to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "LoadBalancerLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "NetworkSecurityGroupsLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "TrafficManagerLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "VirtualNetworkLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "VirtualMachinesLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "VMSSLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "VNetGWLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled."
                }
              },
              "WVDAppGroupsLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for WVD Application Groups to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for WVD Application groups to stream to a Log Analytics workspace when any application groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "WVDWorkspaceLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for WVD Workspace to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for WVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "WVDHostPoolsLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for WVD Host pools to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for WVD Host pools to stream to a Log Analytics workspace when any host pool which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              },
              "StorageAccountsLogAnalyticsEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Storage Accounts to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Storage Accounts to stream to a Log Analytics workspace when any storage account which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                }
              }
            },
            "policyDefinitionGroups": null,
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyDefinitions": [
              {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6f8f98a4-f108-47cb-8e98-91a0d85cd474",
                "policyDefinitionReferenceId": "StorageAccountDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('StorageAccountsLogAnalyticsEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup')]",
                "policyDefinitionReferenceId": "WVDAppGroupDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('WVDAppGroupsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace')]",
                "policyDefinitionReferenceId": "WVDWorkspaceDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('WVDWorkspaceLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools')]",
                "policyDefinitionReferenceId": "WVDHostPoolsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('WVDHostPoolsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway')]",
                "policyDefinitionReferenceId": "ApplicationGatewayDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('ApplicationGatewayLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute')]",
                "policyDefinitionReferenceId": "ExpressRouteDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('ExpressRouteLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall')]",
                "policyDefinitionReferenceId": "FirewallDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('FirewallLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bef3f64c-5290-43b7-85b0-9b254eef4c47",
                "policyDefinitionReferenceId": "KeyVaultDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('KeyVaultLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer')]",
                "policyDefinitionReferenceId": "LoadBalancerDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('LoadBalancerLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups')]",
                "policyDefinitionReferenceId": "NetworkSecurityGroupsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('NetworkSecurityGroupsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c717fb0c-d118-4c43-ab3d-ece30ac81fb3",
                "policyDefinitionReferenceId": "RecoveryVaultDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager')]",
                "policyDefinitionReferenceId": "TrafficManagerDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('TrafficManagerLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork')]",
                "policyDefinitionReferenceId": "VirtualNetworkDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('VirtualNetworkLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM')]",
                "policyDefinitionReferenceId": "VirtualMachinesDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('VirtualMachinesLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS')]",
                "policyDefinitionReferenceId": "VMSSDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('VMSSLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW')]",
                "policyDefinitionReferenceId": "VNetGWDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('VNetGWLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              }
            ]
          },
          "name": "Deploy-Diagnostics-LogAnalytics"
        }
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/policyDefinitions",
      "name": "[variables('policies').policyDefinitions[copyIndex()].name]",
      "apiVersion": "2019-09-01",
      "copy": {
        "name": "policyDefinitionCopy",
        "count": "[length(variables('policies').policyDefinitions)]"
      },
      "properties": {
        "displayName": "[variables('policies').policyDefinitions[copyIndex()].properties.displayName]",
        "description": "[variables('policies').policyDefinitions[copyIndex()].properties.description]",
        "mode": "[variables('policies').policyDefinitions[copyIndex()].properties.mode]",
        "policyType": "Custom",
        "parameters": "[variables('policies').policyDefinitions[copyIndex()].properties.parameters]",
        "policyRule": "[variables('policies').policyDefinitions[copyIndex()].properties.policyRule]",
        "metadata": "[variables('policies').policyDefinitions[copyIndex()].properties.metadata]"
      }
    },
    {
      "type": "Microsoft.Authorization/policySetDefinitions",
      "name": "[variables('initiatives').policySetDefinitions[copyIndex()].name]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "policyDefinitionCopy"
      ],
      "copy": {
        "name": "policySetDefinitionCopy",
        "count": "[length(variables('initiatives').policySetDefinitions)]"
      },
      "properties": {
        "displayName": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.displayName]",
        "description": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.description]",
        "parameters": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.parameters]",
        "policyDefinitions": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.policyDefinitions]",
        "metadata": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.metadata]"
      }
    }
  ]
}